{"version":3,"sources":["tonva/entry/tools.tsx","tonva/img/logo.svg","tonva/entry/login.tsx"],"names":["logo","require","tonvaTop","nav","loginTop","className","src","alt","senders","type","caption","regex","mobileRegex","emailRegex","getSender","un","find","v","test","module","exports","schema","name","required","maxLength","Login","res","resLang","loginRes","uiSchema","items","username","placeholder","label","password","widget","login","onSubmit","context","a","values","form","data","undefined","pwd","userApi","user","guest","sender","console","log","token","userLogined","props","callback","onEnter","footer","href","style","margin","privacyEntry","header","this","withBack","onButtonClick","requiredFlag","React"],"mappings":"0GAAA,uFAGMA,EAAOC,EAAQ,KAEd,SAASC,IACZ,OAAOC,MAAIC,SAAS,uBAAKC,UAAU,+CAC/B,uBAAKA,UAAU,kCAAkCC,IAAKN,EAAMO,IAAI,QAChE,uBAAKF,UAAU,4BAA2B,wBAAMA,UAAU,qBAAhB,UACtC,wBAAMA,UAAU,eAAhB,aAWZ,IAAMG,EAAmB,CACrB,CAACC,KAAK,SAAUC,QAAQ,qBAAOC,MAAOC,eACtC,CAACH,KAAK,QAASC,QAAQ,eAAMC,MAAOE,eAGjC,SAASC,EAAUC,GAEtB,OADaP,EAAQQ,MAAK,SAAAC,GAAC,OAAyB,IAArBA,EAAEN,MAAMO,KAAKH,Q,oBC1BhDI,EAAOC,QAAU,IAA0B,kC,+KCOrCC,EAAiB,CACnB,CAACC,KAAM,WAAYb,KAAM,SAAUc,UAAU,EAAMC,UAAW,KAC9D,CAACF,KAAM,WAAYb,KAAM,SAAUc,UAAU,EAAMC,UAAW,KAC9D,CAACF,KAAM,QAASb,KAAM,WASLgB,E,4MACTC,IAAgBC,kBAAQC,K,EACxBC,SAAqB,CACzBC,MAAO,CACHC,SAAU,CAACC,YAAa,+CAAaC,MAAO,4BAC5CC,SAAU,CAACC,OAAQ,WAAYH,YAAa,eAAMC,MAAO,gBACzDG,MAAO,CAACD,OAAQ,SAAU9B,UAAW,iCAAkC4B,MAAO,kB,EAI9EI,S,uCAAW,WAAOf,EAAagB,GAApB,yBAAAC,EAAA,yDACXC,EAASF,EAAQG,KAAKC,KACtB3B,EAAKyB,EAAM,cAEHG,KADRC,EAAMJ,EAAM,UAHD,yCAKJ,qCALI,uBAOEK,IAAQT,MAAM,CAC3BU,KAAM/B,EACN6B,IAAKA,EACLG,MAAO5C,MAAI4C,QAVA,eAaFJ,KANTG,EAPW,gCAcPE,EAASlC,YAAUC,GACnBN,OAAyBkC,IAAXK,EAAsBA,EAAOtC,QAAU,qBAf9C,kBAgBJD,EAAO,kCAhBH,eAkBrBwC,QAAQC,IAAI,gCAAiCJ,EAAKxB,KAAMwB,EAAKK,OAlBxC,UAmBThD,MAAIiD,YAAYN,EAAM,EAAKO,MAAMC,UAnBxB,4C,0DAqBXC,Q,uCAAU,WAAOjC,EAAagB,GAApB,SAAAC,EAAA,yDACD,aAATjB,EADU,gCAEG,EAAKe,SAAS,QAASC,GAF1B,mF,+GAiBd,IAAIkB,EAAS,2BAAK,uBAAKnD,UAAU,WAC7B,uBAAKA,UAAU,eACX,gBAAC,KAAD,CAAIoD,KAAK,YAAYpD,UAAU,eAAeqD,MAAO,CAACC,OAAO,aAA7D,6BAIHxD,MAAIyD,iBAGLC,GAAoC,EAIxC,OAH4B,IAAxBC,KAAKT,MAAMU,WACXF,EAAS,gBAEN,gBAAC,OAAD,CAAMA,OAAQA,EAAQL,OAAQA,GACjC,uBAAKnD,UAAU,oEACX,uBAAKA,UAAU,cACf,uBAAKA,UAAU,SACVH,cACD,uBAAKG,UAAU,SACf,gBAAC,OAAD,CAAMgB,OAAQA,EAAQQ,SAAUiC,KAAKjC,SACjCmC,cAAeF,KAAKzB,SACpBkB,QAASO,KAAKP,QACdU,cAAc,IAElB,gBAAC,KAAD,CAAI5D,UAAU,yBAAyBoD,KAAK,WAA5C,6BAIJ,uBAAKpD,UAAU,cACf,uBAAKA,UAAU,oB,GA7EI6D","file":"static/js/4.86a09c7e.chunk.js","sourcesContent":["import * as React from 'react';\nimport { nav, mobileRegex, emailRegex } from '../components';\n\nconst logo = require('../img/logo.svg');\n\nexport function tonvaTop() {\n    return nav.loginTop(<div className=\"d-flex align-items-center position-relative\">\n        <img className=\"App-logo h-3c position-absolute\" src={logo} alt=\"img\" />\n        <div className=\"h3 flex-fill text-center\"><span className=\"text-primary mr-3\">同</span>\n            <span className=\"text-danger\">花</span>\n        </div>\n    </div>);\n}\n\ninterface Sender {\n    type: string;\n    caption: string;\n    regex: RegExp;\n}\n\nconst senders:Sender[] = [\n    {type:'mobile', caption:'手机号', regex: mobileRegex},\n    {type:'email', caption:'邮箱', regex: emailRegex}\n];\n\nexport function getSender(un: string):Sender {\n    let sender = senders.find(v => v.regex.test(un) === true);\n    return sender;\n}","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import * as React from 'react';\nimport {nav, Page, Form, Schema, UiSchema, UiTextItem, UiPasswordItem, Context, UiButton, resLang, StringSchema, Ax} from '../components';\nimport { userApi } from '../net';\nimport { LoginRes, loginRes } from '../res';\nimport { tonvaTop, getSender } from './tools';\nimport { User } from '../tool/user';\n\nconst schema: Schema = [\n    {name: 'username', type: 'string', required: true, maxLength: 100} as StringSchema,\n    {name: 'password', type: 'string', required: true, maxLength: 100} as StringSchema,\n    {name: 'login', type: 'submit'},\n];\n\nexport interface LoginProps {\n    withBack?: boolean;\n    callback?: (user:User) => Promise<void>;\n    //top?: any;\n}\n\nexport default class Login extends React.Component<LoginProps> {\n    private res: LoginRes = resLang(loginRes);\n    private uiSchema: UiSchema = {\n        items: {\n            username: {placeholder: '手机/邮箱/用户名', label: '登录账号'} as UiTextItem,\n            password: {widget: 'password', placeholder: '密码', label: '密码'} as UiPasswordItem,\n            login: {widget: 'button', className: 'btn btn-primary btn-block mt-3', label: '登录'} as UiButton,\n        }\n    }\n\n    private onSubmit = async (name:string, context:Context):Promise<string> => {\n        let values = context.form.data;\n        let un = values['username'];\n        let pwd = values['password'];\n        if (pwd === undefined) {\n            return 'something wrong, pwd is undefined';\n        }\n        let user = await userApi.login({\n            user: un,\n            pwd: pwd,\n            guest: nav.guest,\n        });\n\n        if (user === undefined) {\n            let sender = getSender(un);\n            let type:string = sender !== undefined? sender.caption : '用户名';\n            return type + '或密码错！';\n        }\n\t\tconsole.log(\"onLoginSubmit: user=%s pwd:%s\", user.name, user.token);\n        await nav.userLogined(user, this.props.callback);\n    }\n    private onEnter = async (name:string, context:Context):Promise<string> => {\n        if (name === 'password') {\n            return await this.onSubmit('login', context);\n        }\n\t}\n\t/*\n    private clickReg = () => {\n        //nav.replace(<RegisterView />);\n        let register = new RegisterController(undefined);\n        register.start();\n    }\n    private clickForget = () => {\n        let forget = new ForgetController(undefined);\n        forget.start();\n\t}\n\t*/\n    render() {\n        let footer = <div><div className=\"d-block\">\n            <div className='text-center'>\n                <Ax href=\"/register\" className=\"btn btn-link\" style={{margin:'0px auto'}}>\n                    注册账号\n                </Ax>\n            </div>\n            {nav.privacyEntry()}\n        </div>\n        </div>;\n        let header:string|boolean|JSX.Element = false;\n        if (this.props.withBack === true) {\n            header = '登录';\n        }\n        return <Page header={header} footer={footer}>\n            <div className=\"d-flex p-5 flex-column justify-content-center align-items-center\">\n                <div className=\"flex-fill\" />\n                <div className=\"w-20c\">\n                    {tonvaTop()}\n                    <div className=\"h-2c\" />\n                    <Form schema={schema} uiSchema={this.uiSchema} \n                        onButtonClick={this.onSubmit} \n                        onEnter={this.onEnter}\n                        requiredFlag={false} />\n\t\t\t\t\t{/*onClick={() => this.clickForget()}*/}\n                    <Ax className=\"btn btn-link btn-block\" href=\"/forget\">\n                        忘记密码\n                    </Ax>\n                </div>\n                <div className=\"flex-fill\" />\n                <div className=\"flex-fill\" />\n            </div>\n        </Page>;\n    }\n}\n"],"sourceRoot":""}